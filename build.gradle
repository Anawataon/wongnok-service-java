plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.ttb'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Task สำหรับติดตั้ง Git Hooks
tasks.register('installGitHooks', Copy) {
	from new File(rootProject.rootDir, 'scripts/git-hooks/')
	into new File(rootProject.rootDir, '.git/hooks')
	include 'pre-commit', 'commit-msg'
	eachFile { fileCopyDetails ->
		fileCopyDetails.mode = 0755
	}
}

tasks.named('build') {
	dependsOn installGitHooks
}

// Garbage Collection แบบ G1GC
// ปรับขนาด heap memory ให้เหมาะสมกับ web service
// เพิ่มการจัดการ heap dump เมื่อเกิด OutOfMemoryError
tasks.withType(org.springframework.boot.gradle.tasks.run.BootRun) {
    jvmArgs = [
        '-Xms2G',
        '-Xmx2G',
        '-XX:+UseG1GC',
        '-XX:+HeapDumpOnOutOfMemoryError'
    ]
}